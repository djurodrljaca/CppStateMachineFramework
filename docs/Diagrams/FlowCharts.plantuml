@startuml TransitionWorkflow
start

-> Event received;

if (Internal transition triggered?) then (yes)
     :Execute internal transition;
elseif (State transition triggered?) then (yes)
     :Execute state transition;
elseif (State has a default transition?) then (yes)
     :Execute default transition;
else (no)
endif

stop
@enduml

'---------------------------------------------------------------------------------------------------

@startuml StateTransitionWorkflow
start

-> State transition triggered;

if (Transition has guard condition?) then (yes)
     if (Guard condition satisfied?) then (no)
          stop
     else (yes)
     endif
else (no)
endif

if (Current state has exit action?) then (yes)
     :Execute current state's exit action;
else (no)
endif

if (Transition has action?) then (yes)
     :Execute transition's action;
else (no)
endif

if (Next state has entry action?) then (yes)
     :Execute next state's entry action;
else (no)
endif

:Set next state as current state;

stop
@enduml

'---------------------------------------------------------------------------------------------------

@startuml InternalTransitionWorkflow
start

-> Internal transition triggered;

if (Transition has guard condition?) then (yes)
     if (Guard condition satisfied?) then (no)
          stop
     else (yes)
     endif
else (no)
endif

:Execute transition's action;

stop
@enduml

'---------------------------------------------------------------------------------------------------

@startuml InitialTransitionWorkflow
start

-> State machine started;

if (Initial transition has action?) then (yes)
     :Execute initial transition's action;
else (no)
endif

if (Initial state has entry action?) then (yes)
     :Execute initial state's entry action;
else (no)
endif

:Set initial state as current state;

stop
@enduml

'---------------------------------------------------------------------------------------------------

@startuml FinalTransitionWorkflow
start

-> Transition to a final state triggered;

if (Transition has guard condition?) then (yes)
     if (Guard condition satisfied?) then (no)
          stop
     else (yes)
     endif
else (no)
endif

if (Current state has exit action?) then (yes)
     :Execute current state's exit action;
else (no)
endif

if (Transition has action?) then (yes)
     :Execute transition's action;
else (no)
endif

if (Final state has entry action?) then (yes)
     :Execute final state's entry action;
else (no)
endif

:Set final state as current state;

-> State machine stopped;

stop
@enduml

'---------------------------------------------------------------------------------------------------

@startuml PollingWorkflow
start

while (Has pending events?) is (yes)
     :Process next pending event;
endwhile (no)

if (Current state has state action?) then (yes)
     :Execute current state's state action;
else (no)
endif

stop
@enduml
